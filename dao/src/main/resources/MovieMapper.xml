<!DOCTYPE mapper     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.moviemarket.dao.MovieMapper">

    <resultMap id="movieResultMap" type="com.moviemarket.model.MovieDTO">
        <id property="movieId" column="movie_id" />
        <result property="title" column="title" />
        <result property="releaseDate" column="release_date" />
        <result property="rating" column="rating" />
        <result property="price" column="price" />
        <result property="categoryId" column="category_id" />
        <result property="categoryTitle" column="category_title" />
    </resultMap>

    <select id="getAllMovies" resultMap="movieResultMap">
        SELECT movie.*, category.title AS category_title
        FROM (movie LEFT JOIN category ON movie.category_id = category.category_id)
        GROUP BY movie.movie_id
    </select>

    <select id="getMovieById" parameterType="java.lang.Integer" resultMap="movieResultMap">
        SELECT movie.*, category.title AS category_title
        FROM (movie LEFT JOIN category ON movie.category_id = category.category_id)
        WHERE movie.movie_id = #{movieId}
    </select>

    <select id="getMovieByTitle" parameterType="java.lang.String" resultMap="movieResultMap">
        SELECT movie.*, category.title AS category_title
        FROM (movie LEFT JOIN category ON movie.category_id = category.category_id)
        WHERE lower(movie.title) = lower(#{title})
    </select>

    <select id="getMoviesByCategoryId" parameterType="java.lang.Integer" resultMap="movieResultMap">
        SELECT movie.*, category.title AS category_title
        FROM (movie LEFT JOIN category ON movie.category_id = category.category_id)
        WHERE movie.category_id = #{categoryId}
    </select>

    <select id="addMovie" parameterType="com.moviemarket.model.Movie">
        INSERT INTO movie (movie_id, title, release_date, rating, price, category_id)
        VALUES (#{movieId}, #{title}, #{releaseDate}, #{rating}, #{price}, #{categoryId})
    </select>

    <select id="updateMovie" parameterType="com.moviemarket.model.Movie">
        UPDATE movie SET title = #{title}, release_date = #{releaseDate}, rating = #{rating},
        price = #{price}, category_id = #{categoryId} WHERE movie_id = #{movieId}
    </select>

    <select id="deleteMovie" parameterType="java.lang.Integer">
        DELETE FROM movie WHERE movie_id = #{movieId}
    </select>

</mapper>